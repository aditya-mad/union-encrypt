a neat thing about unions is you can use them to serialize a float to send it down some serial communication like uart ,
a float element and an uin32_t element and thats it. then send the uint32_t byte by byte and assemble on the other end
back to a float, via pointer or another of the same union. serializaton like this is also useful with structs to send
them along their serial way, you don't need a union to do that but it's a much cleaner  way than with pointers
a neat thing about unions is you can use them to serialize a float to send it down some serial communication like uart ,
a float element and an uin32_t element and thats it. then send the uint32_t byte by byte and assemble on the other end
back to a float, via pointer or another of the same union. serializaton like this is also useful with structs to send
them along their serial way, you don't need a union to do that but it's a much cleaner  way than with pointers
a neat thing about unions is you can use them to serialize a float to send it down some serial communication like uart ,
a float element and an uin32_t element and thats it. then send the uint32_t byte by byte and assemble on the other end
back to a float, via pointer or another of the same union. serializaton like this is also useful with structs to send
them along their serial way, you don't need a union to do that but it's a much cleaner  way than with pointersa neat thing about unions is you can use them to serialize a float to send it down some serial communication like uart ,
a float element and an uin32_t element and thats it. then send the uint32_t byte by byte and assemble on the other end
back to a float, via pointer or another of the same union. serializaton like this is also useful with structs to send
them along their serial way, you don't need a union to do that but it's a much cleaner  way than with pointers